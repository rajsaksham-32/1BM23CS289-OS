#include <stdio.h>
#include <math.h>

#define MAX 10

int gcd(int a, int b) {
    if (b == 0) return a;
    return gcd(b, a % b);
}

int lcm(int a, int b) {
    return (a * b) / gcd(a, b);
}

int main() {
    int n;
    int burst[MAX], period[MAX];
    int i;
    float utilization = 0.0;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    printf("Enter the CPU burst times:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &burst[i]);
    }

    printf("Enter the time periods:\n");
    for (i = 0; i < n; i++) {
        scanf("%d", &period[i]);
    }

    // Calculate LCM of periods
    int l = period[0];
    for (i = 1; i < n; i++) {
        l = lcm(l, period[i]);
    }

    printf("LCM=%d\n\n", l);
    printf("Rate Monotone Scheduling:\n");
    printf("PID\tBurst\tPeriod\n");
    for (i = 0; i < n; i++) {
        printf("%d\t%d\t%d\n", i + 1, burst[i], period[i]);
    }

    for (i = 0; i < n; i++) {
        utilization += (float)burst[i] / period[i];
    }

    float bound = n * (pow(2, 1.0 / n) - 1);
    printf("\n%.6f <= %.6f =>%s\n", utilization, bound, (utilization <= bound) ? "true" : "false");

    return 0;
}
